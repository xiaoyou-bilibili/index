package ent

import (
	"context"
	_ "github.com/go-sql-driver/mysql"
	"index.data/ent"
	"log"
	"testing"
)

func TestInsert(t *testing.T) {
	// 建立数据库连接
	client, err := ent.Open("mysql", "root:xiaoyou@tcp(192.168.1.40:30000)/data?parseTime=True")
	if err != nil {
		log.Fatal(err)
	}

	defer client.Close()
	// 自动创建表
	if err := client.Schema.Create(context.Background()); err != nil {
		log.Fatalf("failed creating schema resources: %v", err)
	}

	// 插入数据
	//save, err := client.Object.Create().SetID("xiaoyou2").SetObjectName("10").SetContentType("666").Save(context.Background())
	//if err != nil {
	//	fmt.Println("保存失败", err)
	//}

	//data := "简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。简单地使用数据库结构作为图结构。\n使用Go代码定义结构。\n基于代码生成的静态类型。\n容易地进行数据库查询和图遍历。\n容易地使用Go模板扩展和自定义。"

	//save, err := client.Text.Create().SetID("111").SetContent(data).Save(context.Background())
	//fmt.Println(err)
	//fmt.Println(save)
}
